
export nodes='["192.168.1.221", "192.168.1.222", "192.168.1.223", "192.168.1.224"]'

wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg

echo "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://mirrors.tuna.tsinghua.edu.cn/elasticstack/8.x/apt/ stable main" | tee /etc/apt/sources.list.d/elastic-8.x.list

apt-get update -y && apt-get install -y elasticsearch

sed -i 's/xpack.security.enabled: true/xpack.security.enabled: false/g' /etc/elasticsearch/elasticsearch.yml

if [ "`grep ^cluster.initial_master_nodes /etc/elasticsearch/elasticsearch.yml`" == "" ]; then echo "cluster.initial_master_nodes: $nodes" >> /etc/elasticsearch/elasticsearch.yml; else sed -i "s/^cluster.initial_master_nodes.*$/cluster.initial_master_nodes: $nodes/g" /etc/elasticsearch/elasticsearch.yml; fi

if [ "`grep ^discovery.seed_hosts /etc/elasticsearch/elasticsearch.yml`" == "" ]; then echo "discovery.seed_hosts: $nodes" >> /etc/elasticsearch/elasticsearch.yml; else sed -i "s/^discovery.seed_hosts.*$/discovery.seed_hosts: $nodes/g" /etc/elasticsearch/elasticsearch.yml; fi

if [ "`grep ^node.name /etc/elasticsearch/elasticsearch.yml`" == "" ]; then echo "node.name: `hostname`" >> /etc/elasticsearch/elasticsearch.yml; else sed -i "s/^node.name.*$/node.name: `hostname`/g" /etc/elasticsearch/elasticsearch.yml; fi

if [ "`grep ^transport.host /etc/elasticsearch/elasticsearch.yml`" == "" ]; then echo "transport.host: 0.0.0.0" >> /etc/elasticsearch/elasticsearch.yml; else sed -i "s/^transport.host.*$/transport.host: 0.0.0.0/g" /etc/elasticsearch/elasticsearch.yml; fi

# rm -rf /var/lib/elasticsearch; mkdir -p /var/lib/elasticsearch ; chown -R elasticsearch:elasticsearch /var/lib/elasticsearch

systemctl daemon-reload

systemctl enable elasticsearch

systemctl restart elasticsearch

# systemctl status elasticsearch

# curl -X GET "localhost:9200/?pretty"

# curl -XGET http://localhost:9200/_cat/health?v=true



#######  高可用负载均衡  #######

# apt install haproxy -y

# echo > /etc/haproxy/haproxy.cfg

# vi /etc/haproxy/haproxy.cfg

listen winter_elasticsearch_cluster

	mode tcp
	balance source
	bind 0.0.0.0:9200
	
	server es1 192.168.1.221:9200
	server es2 192.168.1.222:9200
	server es3 192.168.1.223:9200
	server es4 192.168.1.224:9200

# systemctl --now enable haproxy

